{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","console","log","fetch","storeId","conetc","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","context","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.b73e94c1.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n\n  static propTypes = {\n    history: PropTypes.object,\n  };\n\n  /* the syntax below binds 'this' to the component */\n  goToStore = (event) => {\n    event.preventDefault();\n    // get text from that input\n    const storeName = this.myInput.current.value;\n    // change the page to /store/input-value\n    this.props.history.push(`/store/${storeName}`);\n  };\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please enter a store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/* stateless functional component */\nconst Header = (props) => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">of</span>\n        <span className=\"the\">the</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  };\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 250, exit: 250 },\n    };\n    // make sure fish is loaded before we continue\n    if (!fish) return null;\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : \"this fish\"} is not available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 250, exit: 250 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            kgs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n  static propTypes = {\n    addFish: PropTypes.func,\n  };\n  createFish = (event) => {\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value), // 1054\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    };\n    this.props.addFish(fish);\n    // refresh the form\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh</option>\n          <option value=\"unavailable\">Sold out</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"image\"\n        />\n        <button type=\"submit\">Add fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      price: PropTypes.number,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func,\n  };\n  handleChange = (event) => {\n    //update the fish\n    //take a copy of the current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value,\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          type=\"text\"\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = (props) => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n      Github\n    </button>\n    <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\n      Twitter\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\n      Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyCXGkdm65Dmqxoq9NrD43WuXXiOyxfXC0k\",\n  authDomain: \"catch-of-the-day-f5181.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-f5181.firebaseio.com\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n//this is a named export\nexport { firebaseApp };\n\n//this is a default export\nexport default base;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    addFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n  };\n\n  state = {\n    uid: null,\n    owner: null,\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async (authData) => {\n    console.log(authData);\n    // look up current store in firebase database\n    const store = await base.fetch(this.props.storeId, { conetc: this });\n    console.log(store);\n    // claim it if there is no owner\n    if (!store.owner) {\n      //save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid,\n      });\n    }\n    // set the state of inventory component to reflect current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n    });\n  };\n\n  authenticate = (provider) => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"logging out\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out</button>;\n    // check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    //check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner</p>\n          {logout}\n        </div>\n      );\n    }\n\n    // they must be the owner, render the inventory.\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map((key) => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      price: PropTypes.number,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n    }),\n    addToOrder: PropTypes.func,\n  };\n  render() {\n    const { image, name, desc, price, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? \"Add to order\" : \"Sold out!\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\"; //import firebase\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  static propTypes = {\n    match: PropTypes.object,\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    //first reinstate localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\",\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = (fish) => {\n    // Take a copy of existing state\n    const fishes = { ...this.state.fishes };\n    // add new fish to fishes var above\n    fishes[`fish${Date.now()}`] = fish;\n    // set new fishes object to state\n    this.setState({\n      fishes,\n    });\n  };\n\n  updateFish = (key, updatedFish) => {\n    //take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // update that state\n    fishes[key] = updatedFish;\n    // set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = (key) => {\n    // take a copy of state\n    const fishes = { ...this.state.fishes };\n    // update the state\n    fishes[key] = null;\n    // update state\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: sampleFishes,\n    });\n  };\n\n  addToOrder = (key) => {\n    //take a copy of state\n    const order = { ...this.state.order };\n    // either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // set new order object to state\n    this.setState({\n      order,\n    });\n  };\n\n  removeFromOrder = (key) => {\n    // take a copy of state\n    const order = { ...this.state.order };\n    // remove item from order\n    delete order[key];\n    // update state\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map((key) => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          fishes={this.state.fishes}\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\n/* stateless functional component */\nconst NotFound = () => (\n   <div>\n       <h2>Not Found!</h2>\n   </div>\n)\n\nexport default NotFound;","import React from \"react\";\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker}/>\n            <Route path=\"/store/:storeId\" component={App}/>\n            <Route component={NotFound}/>\n        </Switch>\n    </BrowserRouter>\n)\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector('#main'));\n\n"],"sourceRoot":""}